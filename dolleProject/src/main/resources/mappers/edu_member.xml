<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.member">

	<resultMap type="com.edu.member.vo.MemberVo"
		id="memberResultMap">
		<id column="MEMBER_IDX" property="no" />
		<result column="MEMBER_NAME" property="name" />
		<result column="MEMBER_NICKNAME" property="nickname" />
		<result column="MEMBER_EMAIL" property="email" />
		<result column="MEMBER_PASSWORD" property="password" />
		<result column="MEMBER_PHONE" property="phone" />
		<result column="MEMBER_BIRTHDATE" property="birthdate" javaType="java.util.Date" />
		<result column="MEMBER_NATIONAL" property="national" />
		<result column="MEMBER_CRE_DATE" property="createDate" javaType="java.util.Date" />
		<result column="MEMBER_MOD_DATE" property="modifiedDate" javaType="java.util.Date" />
		<result column="MEMBER_GRADE" property="grade" />
		<result column="MEMBER_DEL_YN" property="del" />
		<result column="MEMBER_TEMP_PWD" property="tempPassword" />
	</resultMap>

	<select id="memberSelectList" parameterType="map" resultMap="memberResultMap">
		SELECT MEMBER_IDX, MEMBER_NAME, MEMBER_EMAIL, MEMBER_CRE_DATE
		FROM MEMBER
		ORDER BY MEMBER_IDX
		DESC
	</select>

	<select id="memberExist" parameterType="map"
		resultMap="memberResultMap">
		SELECT MEMBER_IDX, MEMBER_NAME, MEMBER_EMAIL
		FROM MEMBER
		WHERE MEMBER_EMAIL = #{email} AND MEMBER_PASSWORD = #{password}
	</select>
	
	<update id="memberUpdateOne" parameterType="memberVo">
		UPDATE MEMBER
		<set>
			<if test="name != ''">MEMBER_NAME = #{name},</if>
			<if test="nickname != ''">MEMBER_NICKNAME = #{nickname},</if>
			<if test="phone != ''">MEMBER_PHONE = #{phone},</if>
			<if test="password != ''">MEMBER_PASSWORD = #{password},</if>
			<if test="tempPassword != ''">MEMBER_TEMP_PWD = #{tempPassword},</if>
			<if test="national != ''">MEMBER_NATIONAL = #{national},</if>
			MEMBER_MOD_DATE = SYSDATE
		</set>
		WHERE MEMBER_IDX = #{no}
	</update>
	
	<insert id="memberInsertOne" 
		parameterType="com.edu.member.vo.MemberVo">
		INSERT INTO MEMBER (MEMBER_IDX, MEMBER_NAME, MEMBER_PHONE
			, MEMBER_NICKNAME, MEMBER_BIRTHDATE, MEMBER_EMAIL, MEMBER_NATIONAL
			, MEMBER_PASSWORD, MEMBER_CRE_DATE, MEMBER_MOD_DATE, MEMBER_GRADE)
		VALUES (SEQ_MEMBER_NO.NEXTVAL, #{name}, #{phone}
			, #{nickname}, #{birthdate}, #{email}, #{national}
			, #{password}, SYSDATE, SYSDATE, #{grade})
	</insert>
	
	<select id="memberNickNameList" parameterType="map" resultType="Integer">
	
		SELECT count(*)
		FROM MEMBER
		WHERE MEMBER_NICKNAME = #{nickname}
		
	</select>

	<select id="memberSelectOne" parameterType="int"
		resultMap="memberResultMap">
		SELECT MEMBER_IDX, MEMBER_NAME, MEMBER_NICKNAME, MEMBER_EMAIL, MEMBER_PHONE, MEMBER_PASSWORD, MEMBER_NATIONAL
		FROM MEMBER
		WHERE MEMBER_IDX = #{no}
	</select>
	
	<delete id="memberDelete" parameterType="int">
		DELETE FROM MEMBER
		WHERE MEMBER_IDX = #{no}
	</delete>

</mapper>